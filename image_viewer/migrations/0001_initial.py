# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-06-12 06:53
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_type', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Category',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Editor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('nick_name', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=10)),
                ('editor_photo', models.ImageField(upload_to='editors/')),
            ],
            options={
                'ordering': ['first_name'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60)),
                ('description', models.TextField()),
                ('pub_date', models.DateTimeField(auto_now_add=True)),
                ('article_image', models.ImageField(upload_to='view_images/')),
                ('category', models.ManyToManyField(related_name='category', to='image_viewer.Category')),
                ('comment', models.ManyToManyField(related_name='comment', to='image_viewer.Comment')),
                ('editor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='image_viewer.Editor')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('continent', models.CharField(choices=[('AFRICA', 'AFRICA'), ('EUROPE', 'EUROPE'), ('ASIA', 'ASIA'), ('NORTH_AMERICA', 'NORTH AMERICA'), ('SOUTH_AMERICA', 'SOUTH AMERICA'), ('AUSTRALIA', 'AUSTRALIA'), ('ANTARCTICA', 'ANTARCTICA')], default='AFRICA', max_length=30)),
                ('country', models.CharField(max_length=30)),
                ('location_descrition', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'Location',
            },
        ),
        migrations.CreateModel(
            name='NewsLetterRecipients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', models.CharField(max_length=30)),
            ],
        ),
        migrations.AddField(
            model_name='image',
            name='location',
            field=models.ManyToManyField(related_name='location', to='image_viewer.Location'),
        ),
        migrations.AddField(
            model_name='image',
            name='tag',
            field=models.ManyToManyField(related_name='tag', to='image_viewer.Tag'),
        ),
    ]
